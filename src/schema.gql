# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProductImage {
  id: ID!
  source: String!
  default: Boolean!
  dateColumns: DateColumns!
  product: Product!
}

type DateColumns {
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductSku {
  id: ID!
  sku: String!
  dateColumns: DateColumns!
  product: Product!
}

type Category {
  id: ID!
  name: String!
  description: String
  dateColumns: DateColumns!
}

type ProductCharacteristics {
  size: String
  sizeSystem: String
  gender: String
  ageGroup: String
  color: String
  weight: String
  height: String
  width: String
  length: String
}

type Product {
  id: ID!
  name: String!
  description: String
  brand: String!
  active: Boolean!
  characteristics: ProductCharacteristics
  dateColumns: DateColumns!
  offers: [Offer!]
  images: [ProductImage!]
  skus: [ProductSku!]
  categories: [Category!]!
}

type Offer {
  id: ID!
  name: String!
  price: Float!
  salePrice: Float
  availability: Boolean
  stock: Float
  link: String!
  shippingCost: Float
  deliveryTime: Float
  rating: Float
  condition: Condition!
  active: Boolean!
  dateColumns: DateColumns!
  store: Store!
  product: Product!
}

enum Condition {
  NEW
  USER
  REFURBISHED
}

type Store {
  id: ID!
  name: String!
  image: String
  active: Boolean
  dateColumns: DateColumns!
  offers: [Offer!]
}

type Query {
  stores(pagination: PaginationDto = {page: 1, maxResultPerPage: 100}): [Store!]!
  store(id: String!): Store!
  offers(pagination: PaginationDto = {page: 1, maxResultPerPage: 100}): [Offer!]!
  offer(id: String!): Offer!
  products(pagination: PaginationDto = {page: 1, maxResultPerPage: 100}): [Product!]!
  product(id: String!): Product!
  categories(pagination: PaginationDto = {page: 1, maxResultPerPage: 100}): [Category!]!
  category(id: String!): Category!
}

input PaginationDto {
  page: Float
  maxResultPerPage: Float
}

type Mutation {
  createStore(data: CreateStoreDto!): Store!
  updateStore(data: UpdateStoreDto!, id: String!): Store!
  removeStore(id: String!): Boolean!
  createOffer(data: CreateOfferDto!): Offer!
  updateOffer(data: UpdateOfferDto!, id: String!): Offer!
  removeOffer(id: String!): Boolean!
  createProduct(data: CreateProductDto!): Product!
  updateProduct(data: UpdateProductDto!, id: String!): Product!
  removeProduct(id: String!): Boolean!
  createCategory(data: CreateCategoryDto!): Category!
  updateCategory(data: UpdateCategoryDto!, id: String!): Category!
  removeCategory(id: String!): Boolean!
}

input CreateStoreDto {
  name: String!
  image: String
  active: Boolean
}

input UpdateStoreDto {
  name: String
  image: String
  active: Boolean
}

input CreateOfferDto {
  productId: String!
  storeId: String!
  name: String!
  price: Float!
  salePrice: Float
  availability: Boolean
  stock: Float
  link: String!
  shippingCost: Float
  deliveryTime: Float
  rating: Float
  condition: Condition
  active: Boolean
}

input UpdateOfferDto {
  name: String
  price: Float
  salePrice: Float
  availability: Boolean
  stock: Float
  link: String
  shippingCost: Float
  deliveryTime: Float
  rating: Float
  condition: Condition
  active: Boolean
}

input CreateProductDto {
  categories: [String!]!
  name: String!
  description: String
  brand: String!
  active: Boolean
  characteristics: ProductCharacteristicsDto
  images: [ProductImageDto!]
  skus: [ProductSkuDto!]
}

input ProductCharacteristicsDto {
  size: String
  sizeSystem: String
  gender: String
  ageGroup: String
  color: String
  weight: String
  height: String
  width: String
  length: String
}

input ProductImageDto {
  source: String!
  default: Boolean
}

input ProductSkuDto {
  sku: String!
}

input UpdateProductDto {
  categoryId: String
  name: String
  description: String
  brand: String
  active: Boolean
  characteristics: ProductCharacteristicsDto
}

input CreateCategoryDto {
  name: String!
  description: String
}

input UpdateCategoryDto {
  name: String
  description: String
}
